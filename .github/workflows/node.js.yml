# Build and deploying a static site generated by `npm run build` to GitHub Pages

name: Deploy site to GitHub Pages

on:
  # Runs on pushes
  push:
    branches-ignore:
      - gh-pages

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - uses: docker://ghcr.io/puppeteer/puppeteer:latest
        with:
          entrypoint: /bin/bash
          user: pptruser

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Cache 11ty artifacts
        id: cache-11ty
        uses: actions/cache@v4
        with:
          path: .cache
          key: cache-11ty

      - name: whoami
        run: whoami

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v4
        if: github.ref_name == github.event.repository.default_branch
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
